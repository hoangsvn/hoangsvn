// @generated by protoc-gen-es v1.10.0
// @generated from file protobuf/spotify/main.proto (package com.smile.spotify.model, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message com.smile.spotify.model.BootstrapResponse
 */
export declare class BootstrapResponse extends Message<BootstrapResponse> {
  /**
   * @generated from oneof com.smile.spotify.model.BootstrapResponse.ucsResponse
   */
  ucsResponse: {
    /**
     * @generated from field: com.smile.spotify.model.UcsResponseWrapperV0 ucsResponseV0 = 2;
     */
    value: UcsResponseWrapperV0;
    case: "ucsResponseV0";
  } | {
    /**
     * @generated from field: com.smile.spotify.model.TrialsFacadeResponseWrapperV1 trialsFacadeResponseV1 = 3;
     */
    value: TrialsFacadeResponseWrapperV1;
    case: "trialsFacadeResponseV1";
  } | { case: undefined; value?: undefined };

  constructor(data?: PartialMessage<BootstrapResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "com.smile.spotify.model.BootstrapResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BootstrapResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BootstrapResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BootstrapResponse;

  static equals(a: BootstrapResponse | PlainMessage<BootstrapResponse> | undefined, b: BootstrapResponse | PlainMessage<BootstrapResponse> | undefined): boolean;
}

/**
 * @generated from message com.smile.spotify.model.UcsResponseWrapperV0
 */
export declare class UcsResponseWrapperV0 extends Message<UcsResponseWrapperV0> {
  /**
   * @generated from oneof com.smile.spotify.model.UcsResponseWrapperV0.result
   */
  result: {
    /**
     * @generated from field: com.smile.spotify.model.UcsResponseWrapperSuccess success = 1;
     */
    value: UcsResponseWrapperSuccess;
    case: "success";
  } | {
    /**
     * @generated from field: com.smile.spotify.model.UcsResponseWrapperError error = 2;
     */
    value: UcsResponseWrapperError;
    case: "error";
  } | { case: undefined; value?: undefined };

  constructor(data?: PartialMessage<UcsResponseWrapperV0>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "com.smile.spotify.model.UcsResponseWrapperV0";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UcsResponseWrapperV0;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UcsResponseWrapperV0;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UcsResponseWrapperV0;

  static equals(a: UcsResponseWrapperV0 | PlainMessage<UcsResponseWrapperV0> | undefined, b: UcsResponseWrapperV0 | PlainMessage<UcsResponseWrapperV0> | undefined): boolean;
}

/**
 * @generated from message com.smile.spotify.model.UcsResponseWrapperSuccess
 */
export declare class UcsResponseWrapperSuccess extends Message<UcsResponseWrapperSuccess> {
  /**
   * @generated from field: com.smile.spotify.model.UcsResponseWrapper customization = 1;
   */
  customization?: UcsResponseWrapper;

  constructor(data?: PartialMessage<UcsResponseWrapperSuccess>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "com.smile.spotify.model.UcsResponseWrapperSuccess";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UcsResponseWrapperSuccess;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UcsResponseWrapperSuccess;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UcsResponseWrapperSuccess;

  static equals(a: UcsResponseWrapperSuccess | PlainMessage<UcsResponseWrapperSuccess> | undefined, b: UcsResponseWrapperSuccess | PlainMessage<UcsResponseWrapperSuccess> | undefined): boolean;
}

/**
 * @generated from message com.smile.spotify.model.UcsResponseWrapperError
 */
export declare class UcsResponseWrapperError extends Message<UcsResponseWrapperError> {
  /**
   * @generated from field: int32 errorCode = 1;
   */
  errorCode: number;

  /**
   * @generated from field: string message = 2;
   */
  message: string;

  /**
   * @generated from field: string logId = 3;
   */
  logId: string;

  constructor(data?: PartialMessage<UcsResponseWrapperError>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "com.smile.spotify.model.UcsResponseWrapperError";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UcsResponseWrapperError;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UcsResponseWrapperError;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UcsResponseWrapperError;

  static equals(a: UcsResponseWrapperError | PlainMessage<UcsResponseWrapperError> | undefined, b: UcsResponseWrapperError | PlainMessage<UcsResponseWrapperError> | undefined): boolean;
}

/**
 * @generated from message com.smile.spotify.model.TrialsFacadeResponseWrapperV1
 */
export declare class TrialsFacadeResponseWrapperV1 extends Message<TrialsFacadeResponseWrapperV1> {
  /**
   * @generated from oneof com.smile.spotify.model.TrialsFacadeResponseWrapperV1.result
   */
  result: {
    /**
     * @generated from field: com.smile.spotify.model.TrialsFacadeResponseWrapperSuccess success = 1;
     */
    value: TrialsFacadeResponseWrapperSuccess;
    case: "success";
  } | {
    /**
     * @generated from field: com.smile.spotify.model.TrialsFacadeResponseWrapperError error = 2;
     */
    value: TrialsFacadeResponseWrapperError;
    case: "error";
  } | { case: undefined; value?: undefined };

  constructor(data?: PartialMessage<TrialsFacadeResponseWrapperV1>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "com.smile.spotify.model.TrialsFacadeResponseWrapperV1";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TrialsFacadeResponseWrapperV1;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TrialsFacadeResponseWrapperV1;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TrialsFacadeResponseWrapperV1;

  static equals(a: TrialsFacadeResponseWrapperV1 | PlainMessage<TrialsFacadeResponseWrapperV1> | undefined, b: TrialsFacadeResponseWrapperV1 | PlainMessage<TrialsFacadeResponseWrapperV1> | undefined): boolean;
}

/**
 * @generated from message com.smile.spotify.model.TrialsFacadeResponseWrapperSuccess
 */
export declare class TrialsFacadeResponseWrapperSuccess extends Message<TrialsFacadeResponseWrapperSuccess> {
  /**
   * @generated from field: int32 field1 = 1;
   */
  field1: number;

  constructor(data?: PartialMessage<TrialsFacadeResponseWrapperSuccess>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "com.smile.spotify.model.TrialsFacadeResponseWrapperSuccess";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TrialsFacadeResponseWrapperSuccess;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TrialsFacadeResponseWrapperSuccess;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TrialsFacadeResponseWrapperSuccess;

  static equals(a: TrialsFacadeResponseWrapperSuccess | PlainMessage<TrialsFacadeResponseWrapperSuccess> | undefined, b: TrialsFacadeResponseWrapperSuccess | PlainMessage<TrialsFacadeResponseWrapperSuccess> | undefined): boolean;
}

/**
 * @generated from message com.smile.spotify.model.TrialsFacadeResponseWrapperError
 */
export declare class TrialsFacadeResponseWrapperError extends Message<TrialsFacadeResponseWrapperError> {
  /**
   * @generated from field: int32 errorCode = 1;
   */
  errorCode: number;

  /**
   * @generated from field: string message = 2;
   */
  message: string;

  /**
   * @generated from field: string logId = 3;
   */
  logId: string;

  constructor(data?: PartialMessage<TrialsFacadeResponseWrapperError>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "com.smile.spotify.model.TrialsFacadeResponseWrapperError";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TrialsFacadeResponseWrapperError;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TrialsFacadeResponseWrapperError;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TrialsFacadeResponseWrapperError;

  static equals(a: TrialsFacadeResponseWrapperError | PlainMessage<TrialsFacadeResponseWrapperError> | undefined, b: TrialsFacadeResponseWrapperError | PlainMessage<TrialsFacadeResponseWrapperError> | undefined): boolean;
}

/**
 * @generated from message com.smile.spotify.model.UcsResponseWrapper
 */
export declare class UcsResponseWrapper extends Message<UcsResponseWrapper> {
  /**
   * @generated from oneof com.smile.spotify.model.UcsResponseWrapper.result
   */
  result: {
    /**
     * @generated from field: com.smile.spotify.model.UcsResponse success = 1;
     */
    value: UcsResponse;
    case: "success";
  } | {
    /**
     * @generated from field: com.smile.spotify.model.Error error = 2;
     */
    value: Error;
    case: "error";
  } | { case: undefined; value?: undefined };

  constructor(data?: PartialMessage<UcsResponseWrapper>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "com.smile.spotify.model.UcsResponseWrapper";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UcsResponseWrapper;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UcsResponseWrapper;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UcsResponseWrapper;

  static equals(a: UcsResponseWrapper | PlainMessage<UcsResponseWrapper> | undefined, b: UcsResponseWrapper | PlainMessage<UcsResponseWrapper> | undefined): boolean;
}

/**
 * @generated from message com.smile.spotify.model.UcsResponse
 */
export declare class UcsResponse extends Message<UcsResponse> {
  /**
   * @generated from oneof com.smile.spotify.model.UcsResponse.resolveResult
   */
  resolveResult: {
    /**
     * @generated from field: com.smile.spotify.model.ResolveResponse resolveSuccess = 1;
     */
    value: ResolveResponse;
    case: "resolveSuccess";
  } | {
    /**
     * @generated from field: com.smile.spotify.model.Error resolveError = 2;
     */
    value: Error;
    case: "resolveError";
  } | { case: undefined; value?: undefined };

  /**
   * @generated from oneof com.smile.spotify.model.UcsResponse.accountAttributesResult
   */
  accountAttributesResult: {
    /**
     * @generated from field: com.smile.spotify.model.AccountAttributesResponse accountAttributesSuccess = 3;
     */
    value: AccountAttributesResponse;
    case: "accountAttributesSuccess";
  } | {
    /**
     * @generated from field: com.smile.spotify.model.Error accountAttributesError = 4;
     */
    value: Error;
    case: "accountAttributesError";
  } | { case: undefined; value?: undefined };

  /**
   * @generated from field: int64 fetchTimeMillis = 5;
   */
  fetchTimeMillis: bigint;

  constructor(data?: PartialMessage<UcsResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "com.smile.spotify.model.UcsResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UcsResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UcsResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UcsResponse;

  static equals(a: UcsResponse | PlainMessage<UcsResponse> | undefined, b: UcsResponse | PlainMessage<UcsResponse> | undefined): boolean;
}

/**
 * @generated from message com.smile.spotify.model.ResolveResponse
 */
export declare class ResolveResponse extends Message<ResolveResponse> {
  /**
   * @generated from field: com.smile.spotify.model.Configuration configuration = 1;
   */
  configuration?: Configuration;

  constructor(data?: PartialMessage<ResolveResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "com.smile.spotify.model.ResolveResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResolveResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResolveResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResolveResponse;

  static equals(a: ResolveResponse | PlainMessage<ResolveResponse> | undefined, b: ResolveResponse | PlainMessage<ResolveResponse> | undefined): boolean;
}

/**
 * @generated from message com.smile.spotify.model.Configuration
 */
export declare class Configuration extends Message<Configuration> {
  /**
   * @generated from field: string configurationAssignmentId = 1;
   */
  configurationAssignmentId: string;

  /**
   * @generated from field: int64 fetchTimeMillis = 2;
   */
  fetchTimeMillis: bigint;

  /**
   * @generated from field: repeated com.smile.spotify.model.AssignedValue assignedValues = 3;
   */
  assignedValues: AssignedValue[];

  /**
   * @generated from field: int64 policySnapshotId = 4;
   */
  policySnapshotId: bigint;

  constructor(data?: PartialMessage<Configuration>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "com.smile.spotify.model.Configuration";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Configuration;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Configuration;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Configuration;

  static equals(a: Configuration | PlainMessage<Configuration> | undefined, b: Configuration | PlainMessage<Configuration> | undefined): boolean;
}

/**
 * @generated from message com.smile.spotify.model.AssignedValue
 */
export declare class AssignedValue extends Message<AssignedValue> {
  /**
   * @generated from field: com.smile.spotify.model.Identifier propertyId = 1;
   */
  propertyId?: Identifier;

  /**
   * @generated from field: com.smile.spotify.model.Metadata metadata = 2;
   */
  metadata?: Metadata;

  /**
   * @generated from oneof com.smile.spotify.model.AssignedValue.structuredValue
   */
  structuredValue: {
    /**
     * @generated from field: com.smile.spotify.model.BoolValue boolValue = 3;
     */
    value: BoolValue;
    case: "boolValue";
  } | {
    /**
     * @generated from field: com.smile.spotify.model.IntValue intValue = 4;
     */
    value: IntValue;
    case: "intValue";
  } | {
    /**
     * @generated from field: com.smile.spotify.model.EnumValue enumValue = 5;
     */
    value: EnumValue;
    case: "enumValue";
  } | { case: undefined; value?: undefined };

  constructor(data?: PartialMessage<AssignedValue>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "com.smile.spotify.model.AssignedValue";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AssignedValue;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AssignedValue;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AssignedValue;

  static equals(a: AssignedValue | PlainMessage<AssignedValue> | undefined, b: AssignedValue | PlainMessage<AssignedValue> | undefined): boolean;
}

/**
 * @generated from message com.smile.spotify.model.Identifier
 */
export declare class Identifier extends Message<Identifier> {
  /**
   * @generated from field: string scope = 1;
   */
  scope: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  constructor(data?: PartialMessage<Identifier>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "com.smile.spotify.model.Identifier";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Identifier;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Identifier;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Identifier;

  static equals(a: Identifier | PlainMessage<Identifier> | undefined, b: Identifier | PlainMessage<Identifier> | undefined): boolean;
}

/**
 * @generated from message com.smile.spotify.model.Metadata
 */
export declare class Metadata extends Message<Metadata> {
  /**
   * @generated from field: int64 policyId = 1;
   */
  policyId: bigint;

  /**
   * @generated from field: string externalRealm = 2;
   */
  externalRealm: string;

  /**
   * @generated from field: int64 externalRealmId = 3;
   */
  externalRealmId: bigint;

  constructor(data?: PartialMessage<Metadata>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "com.smile.spotify.model.Metadata";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Metadata;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Metadata;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Metadata;

  static equals(a: Metadata | PlainMessage<Metadata> | undefined, b: Metadata | PlainMessage<Metadata> | undefined): boolean;
}

/**
 * @generated from message com.smile.spotify.model.BoolValue
 */
export declare class BoolValue extends Message<BoolValue> {
  /**
   * @generated from field: bool value = 1;
   */
  value: boolean;

  constructor(data?: PartialMessage<BoolValue>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "com.smile.spotify.model.BoolValue";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BoolValue;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BoolValue;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BoolValue;

  static equals(a: BoolValue | PlainMessage<BoolValue> | undefined, b: BoolValue | PlainMessage<BoolValue> | undefined): boolean;
}

/**
 * @generated from message com.smile.spotify.model.EnumValue
 */
export declare class EnumValue extends Message<EnumValue> {
  /**
   * @generated from field: string value = 1;
   */
  value: string;

  constructor(data?: PartialMessage<EnumValue>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "com.smile.spotify.model.EnumValue";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EnumValue;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EnumValue;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EnumValue;

  static equals(a: EnumValue | PlainMessage<EnumValue> | undefined, b: EnumValue | PlainMessage<EnumValue> | undefined): boolean;
}

/**
 * @generated from message com.smile.spotify.model.IntValue
 */
export declare class IntValue extends Message<IntValue> {
  /**
   * @generated from field: int32 value = 1;
   */
  value: number;

  constructor(data?: PartialMessage<IntValue>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "com.smile.spotify.model.IntValue";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): IntValue;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): IntValue;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): IntValue;

  static equals(a: IntValue | PlainMessage<IntValue> | undefined, b: IntValue | PlainMessage<IntValue> | undefined): boolean;
}

/**
 * @generated from message com.smile.spotify.model.AccountAttributesResponse
 */
export declare class AccountAttributesResponse extends Message<AccountAttributesResponse> {
  /**
   * @generated from field: map<string, com.smile.spotify.model.AccountAttribute> accountAttributes = 1;
   */
  accountAttributes: { [key: string]: AccountAttribute };

  constructor(data?: PartialMessage<AccountAttributesResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "com.smile.spotify.model.AccountAttributesResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AccountAttributesResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AccountAttributesResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AccountAttributesResponse;

  static equals(a: AccountAttributesResponse | PlainMessage<AccountAttributesResponse> | undefined, b: AccountAttributesResponse | PlainMessage<AccountAttributesResponse> | undefined): boolean;
}

/**
 * @generated from message com.smile.spotify.model.AccountAttribute
 */
export declare class AccountAttribute extends Message<AccountAttribute> {
  /**
   * @generated from oneof com.smile.spotify.model.AccountAttribute.value
   */
  value: {
    /**
     * @generated from field: bool boolValue = 2;
     */
    value: boolean;
    case: "boolValue";
  } | {
    /**
     * @generated from field: int64 longValue = 3;
     */
    value: bigint;
    case: "longValue";
  } | {
    /**
     * @generated from field: string stringValue = 4;
     */
    value: string;
    case: "stringValue";
  } | { case: undefined; value?: undefined };

  constructor(data?: PartialMessage<AccountAttribute>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "com.smile.spotify.model.AccountAttribute";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AccountAttribute;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AccountAttribute;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AccountAttribute;

  static equals(a: AccountAttribute | PlainMessage<AccountAttribute> | undefined, b: AccountAttribute | PlainMessage<AccountAttribute> | undefined): boolean;
}

/**
 * @generated from message com.smile.spotify.model.Error
 */
export declare class Error extends Message<Error> {
  /**
   * @generated from field: int32 errorCode = 1;
   */
  errorCode: number;

  /**
   * @generated from field: string errorMessage = 2;
   */
  errorMessage: string;

  constructor(data?: PartialMessage<Error>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "com.smile.spotify.model.Error";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Error;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Error;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Error;

  static equals(a: Error | PlainMessage<Error> | undefined, b: Error | PlainMessage<Error> | undefined): boolean;
}

